{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Card, Button, Header, Icon, Segment } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Layout from '../components/Layout';\nimport { Link } from '../routes';\nimport AnalyseForm from '../components/AnalyseForm';\nimport Web3 from 'web3';\nimport NalwareDetection from \"../ethereum/build/MalwareDetection.json\";\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex(props) {\n    var _this;\n\n    _classCallCheck(this, CampaignIndex);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      campaigns: []\n    };\n    return _this;\n  } // static async getInitialProps() {\n  //   let web3 = new Web3('https://goerli.infura.io/v3/41394bd8d0254526be13defed288327a')\n  //   let factory = new web3.eth.Contract(\n  //     JSON.parse(MalwareDetection.interface),\n  //     '0xefCFCc404B71eB723100D02f9c9dfC71C197e265'\n  //   );\n  //   const campaigns = await factory.methods.getDeployedMalwares().call();\n  //   console.log(\"Ff: \", campaigns)\n  //   return {\n  //     campaigns\n  //   };\n  // }\n\n\n  _createClass(CampaignIndex, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var myHeaders, raw, requestOptions, campaigns;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                myHeaders = new Headers();\n                myHeaders.append(\"Content-Type\", \"application/json\");\n                myHeaders.append(\"Cookie\", \"csrftoken=JXKpXceGmKoaL8yPyVgKXyF9Gu3KBe8H\");\n                raw = JSON.stringify({\n                  \"hash\": \"123\",\n                  \"contribution\": 60,\n                  \"link\": \"fgsdgdfgfdg\",\n                  \"percent\": 90\n                });\n                requestOptions = {\n                  method: 'GET',\n                  headers: myHeaders,\n                  body: raw,\n                  redirect: 'follow'\n                };\n                fetch(\"http://localhost:8000/malwaredetection/\", requestOptions).then(function (response) {\n                  return response.text();\n                }).then(function (result) {\n                  return console.log(result);\n                })[\"catch\"](function (error) {\n                  return console.log('error', error);\n                });\n                _context.next = 9;\n                return fetch('http://localhost:8000/malwaredetection/');\n\n              case 9:\n                campaigns = _context.sent;\n                console.log(\"Ff: \", campaigns);\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0.message);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 13]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"renderCampaigns\",\n    value: function renderCampaigns() {// const items = this.props.campaigns.map(address => {\n      //   return {\n      //     header: address,\n      //     description: (\n      //       <Link route={`/campaigns/${address}`}>\n      //         <a>View Malware</a>\n      //       </Link>\n      //     ),\n      //     fluid: true\n      //   };\n      // });\n      // return <Card.Group items={items} />;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Segment.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Segment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                as: \"h3\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"file alternate outline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this), \"Analysing Files\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AnalyseForm, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Segment, {\n              children: /*#__PURE__*/_jsxDEV(Header, {\n                as: \"h3\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"bug\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 13\n                }, this), \"Malware Files\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Segment, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                route: \"/campaigns/new\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    floated: \"right\",\n                    content: \"Create Malware\",\n                    icon: \"add circle\",\n                    primary: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 11\n              }, this), this.renderCampaigns()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return CampaignIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/pages/index.js"],"names":["React","Component","Card","Button","Header","Icon","Segment","factory","Layout","Link","AnalyseForm","Web3","NalwareDetection","CampaignIndex","props","state","campaigns","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","console","log","error","message","renderCampaigns"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Button ,Header,Icon,Segment} from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Layout from '../components/Layout';\nimport { Link } from '../routes';\nimport AnalyseForm from '../components/AnalyseForm';\nimport Web3 from 'web3';\nimport NalwareDetection from \"../ethereum/build/MalwareDetection.json\"\n\nclass CampaignIndex extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      campaigns: []\n    }\n  }\n\n  // static async getInitialProps() {\n  //   let web3 = new Web3('https://goerli.infura.io/v3/41394bd8d0254526be13defed288327a')\n  //   let factory = new web3.eth.Contract(\n  //     JSON.parse(MalwareDetection.interface),\n  //     '0xefCFCc404B71eB723100D02f9c9dfC71C197e265'\n  //   );\n  //   const campaigns = await factory.methods.getDeployedMalwares().call();\n\n  //   console.log(\"Ff: \", campaigns)\n  //   return {\n  //     campaigns\n  //   };\n  // }\n\n\n  async componentDidMount() {\n    // const campaigns = await factory.methods.getDeployedMalwares().call();\n    try {\n      let myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"Cookie\", \"csrftoken=JXKpXceGmKoaL8yPyVgKXyF9Gu3KBe8H\");\n\n      let raw = JSON.stringify({ \"hash\": \"123\", \"contribution\": 60, \"link\": \"fgsdgdfgfdg\", \"percent\": 90 });\n\n      let requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n      };\n\n      fetch(\"http://localhost:8000/malwaredetection/\", requestOptions)\n        .then(response => response.text())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error));\n\n      const campaigns = await fetch('http://localhost:8000/malwaredetection/')\n\n      console.log(\"Ff: \", campaigns)\n\n    } catch (err) {\n      console.log(err.message)\n    }\n\n  }\n\n  renderCampaigns() {\n\n    // const items = this.props.campaigns.map(address => {\n    //   return {\n    //     header: address,\n    //     description: (\n    //       <Link route={`/campaigns/${address}`}>\n    //         <a>View Malware</a>\n    //       </Link>\n    //     ),\n    //     fluid: true\n    //   };\n    // });\n\n    // return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n\n      <div>\n\n        <Segment.Group>\n\n        <Segment>\n                <Header as='h3'>\n                    <Icon name='file alternate outline' />\n                    Analysing Files\n                </Header>\n                            <AnalyseForm />\n                        </Segment>\n\n        <Segment>\n        <Header as='h3'>\n            <Icon name='bug' />\n           Malware Files\n        </Header>\n        </Segment>\n\n              <Segment>\n\n          <Link route=\"/campaigns/new\">\n            <a>\n              <Button\n                floated=\"right\"\n                content=\"Create Malware\"\n                icon=\"add circle\"\n                primary\n              />\n            </a>\n          </Link>\n\n          {this.renderCampaigns()}\n\n          </Segment>\n        </Segment.Group>\n\n\n       </div>\n\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}