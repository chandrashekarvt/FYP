{"ast":null,"code":"export const getResult = async path => {\n  let myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  myHeaders.append(\"Cookie\", \"csrftoken=JXKpXceGmKoaL8yPyVgKXyF9Gu3KBe8H\");\n  let requestOptions = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow'\n  };\n\n  try {\n    let res = await fetch(path, requestOptions);\n    return res.json();\n  } catch (err) {\n    console.log('error', err);\n  }\n};\nexport const postResult = async () => {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  myHeaders.append(\"Cookie\", \"csrftoken=JXKpXceGmKoaL8yPyVgKXyF9Gu3KBe8H\");\n  var raw = JSON.stringify({\n    \"hash\": \"12345667\",\n    \"contribution\": 60,\n    \"link\": \"fgsdgdfgfdg\",\n    \"percent\": 90\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch(\"http://localhost:8000/malwaredetection/new\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n};","map":{"version":3,"sources":["/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/utils.ts"],"names":["getResult","path","myHeaders","Headers","append","requestOptions","method","headers","redirect","res","fetch","json","err","console","log","postResult","raw","JSON","stringify","body","then","response","text","result","catch","error"],"mappings":"AAEA,OAAO,MAAMA,SAAS,GAAG,MAAOC,IAAP,IAAwB;AAC7C,MAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAF,EAAAA,SAAS,CAACE,MAAV,CAAiB,QAAjB,EAA2B,4CAA3B;AAEA,MAAIC,cAA2B,GAAG;AAC9BC,IAAAA,MAAM,EAAE,KADsB;AAE9BC,IAAAA,OAAO,EAAEL,SAFqB;AAG9BM,IAAAA,QAAQ,EAAE;AAHoB,GAAlC;;AAKA,MAAI;AACA,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAACT,IAAD,EAAOI,cAAP,CAArB;AACA,WAAOI,GAAG,CAACE,IAAJ,EAAP;AACH,GAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACH;AACJ,CAhBM;AAkBP,OAAO,MAAMG,UAAU,GAAG,YAAY;AAClC,MAAIb,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACAF,EAAAA,SAAS,CAACE,MAAV,CAAiB,QAAjB,EAA2B,4CAA3B;AAEA,MAAIY,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAE,YAAQ,UAAV;AAAsB,oBAAgB,EAAtC;AAA0C,YAAQ,aAAlD;AAAiE,eAAW;AAA5E,GAAf,CAAV;AAEA,MAAIb,cAAc,GAAG;AACjBC,IAAAA,MAAM,EAAE,MADS;AAEjBC,IAAAA,OAAO,EAAEL,SAFQ;AAGjBiB,IAAAA,IAAI,EAAEH,GAHW;AAIjBR,IAAAA,QAAQ,EAAE;AAJO,GAArB;AAOAE,EAAAA,KAAK,CAAC,4CAAD,EAA+CL,cAA/C,CAAL,CACKe,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,MAAM,IAAIV,OAAO,CAACC,GAAR,CAAYS,MAAZ,CAFpB,EAGKC,KAHL,CAGWC,KAAK,IAAIZ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBW,KAArB,CAHpB;AAIH,CAlBM","sourcesContent":["\n\nexport const getResult = async (path: string) => {\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Cookie\", \"csrftoken=JXKpXceGmKoaL8yPyVgKXyF9Gu3KBe8H\");\n\n    let requestOptions: RequestInit = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n    };\n    try {\n        let res = await fetch(path, requestOptions);\n        return res.json()\n    } catch (err) {\n        console.log('error', err)\n    }\n}\n\nexport const postResult = async () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Cookie\", \"csrftoken=JXKpXceGmKoaL8yPyVgKXyF9Gu3KBe8H\");\n\n    var raw = JSON.stringify({ \"hash\": \"12345667\", \"contribution\": 60, \"link\": \"fgsdgdfgfdg\", \"percent\": 90 });\n\n    var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    fetch(\"http://localhost:8000/malwaredetection/new\", requestOptions)\n        .then(response => response.text())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error));\n}\n"]},"metadata":{},"sourceType":"module"}