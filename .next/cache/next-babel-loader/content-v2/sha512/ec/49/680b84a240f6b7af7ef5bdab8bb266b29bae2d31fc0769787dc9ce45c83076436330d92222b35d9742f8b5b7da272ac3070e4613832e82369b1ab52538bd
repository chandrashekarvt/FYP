{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/pages/campaigns/indexTest.js\";\nimport React, { Component } from 'react';\nimport { Card, Button, Header, Icon, Segment } from 'semantic-ui-react';\nimport factory from '../../ethereum/factory';\nimport Layout from '../../components/Layout';\nimport { Link } from '../../routes';\nimport { getResult } from '../../utils';\n\nclass CampaignIndex extends Component {\n  static async getInitialProps() {\n    //const campaigns = await factory.methods.getDeployedMalwares().call();\n    // const testingNodes = await factory.methods.getDeployedNodes().call();\n    let res = await getResult('http://localhost:8000/malwaredetection/');\n    return {\n      testingNodes: res.malwares.filter(obj => obj.percent === 0)\n    };\n  }\n\n  renderTestingNodes() {\n    const items = this.props.testingNodes.map(({\n      hash: address\n    }) => {\n      return {\n        header: address,\n        description: /*#__PURE__*/_jsxDEV(Link, {\n          route: `/campaigns/test/${address}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"View Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this),\n        fluid: true\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    if (localStorage.getItem(\"is_tester\")) {\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Segment.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Segment, {\n              children: /*#__PURE__*/_jsxDEV(Header, {\n                as: \"h3\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"users\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 15\n                }, this), \"Testing Nodes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Segment, {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                route: \"/campaigns/newTest\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    floated: \"right\",\n                    content: \"Add Testing Node\",\n                    icon: \"add circle\",\n                    primary: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 15\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 11\n              }, this), this.renderTestingNodes()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"You are not authorized to vote malewares\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/pages/campaigns/indexTest.js"],"names":["React","Component","Card","Button","Header","Icon","Segment","factory","Layout","Link","getResult","CampaignIndex","getInitialProps","res","testingNodes","malwares","filter","obj","percent","renderTestingNodes","items","props","map","hash","address","header","description","fluid","render","localStorage","getItem"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA8BC,IAA9B,EAAmCC,OAAnC,QAAiD,mBAAjD;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,aAAN,SAA4BV,SAA5B,CAAsC;AACpC,eAAaW,eAAb,GAA+B;AAC7B;AACA;AACA,QAAIC,GAAG,GAAG,MAAMH,SAAS,CAAC,yCAAD,CAAzB;AAEA,WAAO;AACLI,MAAAA,YAAY,EAAED,GAAG,CAACE,QAAJ,CAAaC,MAAb,CAAqBC,GAAD,IAASA,GAAG,CAACC,OAAJ,KAAgB,CAA7C;AADT,KAAP;AAGD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWP,YAAX,CAAwBQ,GAAxB,CAA4B,CAAC;AAAEC,MAAAA,IAAI,EAAEC;AAAR,KAAD,KAAuB;AAC/D,aAAO;AACLC,QAAAA,MAAM,EAAED,OADH;AAELE,QAAAA,WAAW,eACT,QAAC,IAAD;AAAM,UAAA,KAAK,EAAG,mBAAkBF,OAAQ,EAAxC;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHG;AAOLG,QAAAA,KAAK,EAAE;AAPF,OAAP;AASD,KAVa,CAAd;AAYA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AAEP,QAAIC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAJ,EAAuC;AAGvC,0BACE,QAAC,MAAD;AAAA,+BACE;AAAA,iCAGE,QAAC,OAAD,CAAS,KAAT;AAAA,oCAEA,QAAC,OAAD;AAAA,qCACA,QAAC,MAAD;AAAQ,gBAAA,EAAE,EAAC,IAAX;AAAA,wCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,wBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAFA,eASM,QAAC,OAAD;AAAA,sCAEN,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAC,oBAAZ;AAAA,uCACE;AAAA,yCACE,QAAC,MAAD;AACE,oBAAA,OAAO,EAAC,OADV;AAEE,oBAAA,OAAO,EAAC,kBAFV;AAGE,oBAAA,IAAI,EAAC,YAHP;AAIE,oBAAA,OAAO;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAFM,EAaL,KAAKX,kBAAL,EAbK;AAAA;AAAA;AAAA;AAAA;AAAA,oBATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAkCC,KArCD,MAqCO;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF;;AAvEmC;;AA0EtC,eAAeR,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Button, Header,Icon,Segment} from 'semantic-ui-react';\nimport factory from '../../ethereum/factory';\nimport Layout from '../../components/Layout';\nimport { Link } from '../../routes';\nimport { getResult } from '../../utils';\n\nclass CampaignIndex extends Component {\n  static async getInitialProps() {\n    //const campaigns = await factory.methods.getDeployedMalwares().call();\n    // const testingNodes = await factory.methods.getDeployedNodes().call();\n    let res = await getResult('http://localhost:8000/malwaredetection/');\n\n    return {\n      testingNodes: res.malwares.filter((obj) => obj.percent === 0)\n     };\n  }\n\n  renderTestingNodes() {\n    const items = this.props.testingNodes.map(({ hash: address }) => {\n      return {\n        header: address,\n        description: (\n          <Link route={`/campaigns/test/${address}`}>\n            <a>View Node</a>\n          </Link>\n        ),\n        fluid: true\n      };\n    });\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n\n    if (localStorage.getItem(\"is_tester\")) {\n\n\n    return (\n      <Layout>\n        <div>\n\n\n          <Segment.Group>\n\n          <Segment>\n          <Header as='h3'>\n              <Icon name='users' />\n             Testing Nodes\n          </Header>\n          </Segment>\n\n                <Segment>\n\n          <Link route=\"/campaigns/newTest\">\n            <a>\n              <Button\n                floated=\"right\"\n                content=\"Add Testing Node\"\n                icon=\"add circle\"\n                primary\n              />\n            </a>\n          </Link>\n\n          {this.renderTestingNodes()}\n\n          </Segment>\n        </Segment.Group>\n        </div>\n      </Layout>\n    );\n    } else {\n      return (\n        <h3>You are not authorized to vote malewares</h3>\n      )\n    }\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}