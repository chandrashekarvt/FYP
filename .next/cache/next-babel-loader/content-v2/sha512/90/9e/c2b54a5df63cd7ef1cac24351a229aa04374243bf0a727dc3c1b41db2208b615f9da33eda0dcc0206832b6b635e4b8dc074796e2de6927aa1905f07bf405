{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/pages/auth/login.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Segment, Header, Icon } from 'semantic-ui-react';\nimport Layout from '../../components/Layout'; // import web3 from '../../ethereum/web3';\n\nimport { Router } from '../../routes';\nimport { loginUser, postResult } from '../../utils';\n\nclass CampaignNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      username: '',\n      password: '',\n      errorMessage: '',\n      is_tester: false,\n      loading: false,\n      register: true\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const {\n          username,\n          password,\n          is_tester,\n          register\n        } = this.state;\n        let msg = await loginUser(username, password, is_tester, register);\n        console.log(msg);\n\n        if (!msg.includes(\"success\")) {\n          this.setState({\n            errorMessage: msg\n          });\n        } else {\n          Router.pushRoute('/');\n        }\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      register,\n      is_tester\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Segment.Group, {\n        horizontal: true,\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Header, {\n            as: \"h3\",\n            children: register ? \"Register\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.onSubmit,\n            error: !!this.state.errorMessage,\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                labelPosition: \"right\",\n                value: this.state.username,\n                onChange: event => this.setState({\n                  username: event.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                labelPosition: \"right\",\n                value: this.state.password,\n                onChange: event => this.setState({\n                  password: event.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), register && /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"ui checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  checked: is_tester,\n                  type: \"checkbox\",\n                  onChange: event => this.setState({\n                    is_tester: event.target.checked\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Register as tester\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Message, {\n              error: true,\n              header: \"Oops!\",\n              content: this.state.errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              loading: this.state.loading,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/pages/auth/login.js"],"names":["React","Component","Form","Button","Input","Message","Segment","Header","Icon","Layout","Router","loginUser","postResult","CampaignNew","username","password","errorMessage","is_tester","loading","register","event","preventDefault","setState","state","msg","console","log","includes","pushRoute","err","message","render","onSubmit","target","value","checked"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message, Segment, Header, Icon } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\n// import web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\nimport { loginUser, postResult } from '../../utils';\n\n\n\n\nclass CampaignNew extends Component {\n    state = {\n        username: '',\n        password: '',\n        errorMessage: '',\n        is_tester: false,\n        loading: false,\n        register: true\n    };\n\n    onSubmit = async event => {\n\n        event.preventDefault();\n\n        this.setState({ loading: true, errorMessage: '' });\n\n        try {\n            const { username, password, is_tester, register } = this.state;\n            let msg = await loginUser(username, password, is_tester, register);\n            console.log(msg)\n            if (!msg.includes(\"success\")) {\n                this.setState({ errorMessage: msg })\n            } else {\n                Router.pushRoute('/');\n            }\n        } catch (err) {\n            this.setState({ errorMessage: err.message });\n        }\n        this.setState({ loading: false });\n    };\n\n\n\n    render() {\n        const { register, is_tester } = this.state;\n        return (\n            <Layout>\n\n                <Segment.Group horizontal>\n                    <Segment>\n                        <br />\n\n                        <Header as='h3'>\n                            {register ? \"Register\" : \"Login\"}\n                        </Header>\n\n                        <br />\n\n                        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n                            <Form.Field>\n                                <label>Username</label>\n                                <Input\n                                    labelPosition=\"right\"\n                                    value={this.state.username}\n                                    onChange={event =>\n                                        this.setState({ username: event.target.value })}\n                                />\n\n\n                                <label>Password</label>\n                                <Input\n                                    type='password'\n                                    labelPosition=\"right\"\n                                    value={this.state.password}\n                                    onChange={event =>\n                                        this.setState({ password: event.target.value })}\n                                />\n\n                                {register\n                                    &&\n                                    <div class=\"ui checkbox\">\n                                        <input checked={is_tester} type=\"checkbox\"\n                                            onChange={event =>\n                                                this.setState({ is_tester: event.target.checked })} />\n                                        <label>Register as tester</label>\n                                    </div>\n                                }\n\n                            </Form.Field>\n                            <Message error header=\"Oops!\" content={this.state.errorMessage} />\n                            <Button loading={this.state.loading} >\n                                Submit\n                            </Button>\n                        </Form>\n\n                    </Segment>\n                </Segment.Group>\n\n\n\n            </Layout>\n        );\n    }\n}\n\nexport default CampaignNew;\n"]},"metadata":{},"sourceType":"module"}