{"ast":null,"code":"const {\n  Octokit\n} = require(\"@octokit/rest\");\n\nconst {\n  Base64\n} = require(\"js-base64\");\n\nconst fs = require(\"fs\");\n\nrequire(\"dotenv\").config();\n\nconst octokit = new Octokit({\n  auth: \"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\"\n});\n\nconst main2 = async str => {};\n\nexport default (async (req, res) => {\n  const hash = req.body.hash;\n\n  try {\n    const filename = hash; //assign as str\n\n    const {\n      data\n    } = await octokit.request('GET /repos/{owner}/{repo}/contents/{path}', {\n      owner: \"chandrashekarvt\",\n      repo: \"githubApiUsageToUploadDownload\",\n      path: filename\n    });\n    console.log(data.html_url);\n    res.status(200).json(data.html_url);\n  } catch (err) {\n    console.error(err);\n  }\n});","map":{"version":3,"sources":["/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/pages/api/GetDownloadUrl.tsx"],"names":["Octokit","require","Base64","fs","config","octokit","auth","main2","str","req","res","hash","body","filename","data","request","owner","repo","path","console","log","html_url","status","json","err","error"],"mappings":"AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,OAAO,CAAC,eAAD,CAA3B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,WAAD,CAA1B;;AACA,MAAME,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAlB;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBG,MAAlB;;AAEA,MAAMC,OAAO,GAAG,IAAIL,OAAJ,CAAY;AAC1BM,EAAAA,IAAI,EAAE;AADoB,CAAZ,CAAhB;;AAGA,MAAMC,KAAK,GAAC,MAAMC,GAAN,IAAY,CAEvB,CAFD;;AAGA,gBAAe,OAAOC,GAAP,EAA2BC,GAA3B,KAAkD;AAGzD,QAAMC,IAAI,GAAGF,GAAG,CAACG,IAAJ,CAASD,IAAtB;;AAGA,MAAG;AACC,UAAME,QAAQ,GAACF,IAAf,CADD,CACoB;;AACnB,UAAM;AAACG,MAAAA;AAAD,QAAO,MAAMT,OAAO,CAACU,OAAR,CAAgB,2CAAhB,EAA6D;AAC9EC,MAAAA,KAAK,EAAE,iBADuE;AAE9EC,MAAAA,IAAI,EAAE,gCAFwE;AAG5EC,MAAAA,IAAI,EAAEL;AAHsE,KAA7D,CAAnB;AAKEM,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,QAAjB;AACAX,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBT,IAAI,CAACO,QAA1B;AACD,GATL,CAUK,OAAOG,GAAP,EAAY;AACbL,IAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACC;AACF,CAnBX","sourcesContent":["import type { NextApiRequest, NextApiResponse } from 'next'\n\nconst { Octokit } = require(\"@octokit/rest\")\nconst { Base64 } = require(\"js-base64\")\nconst fs = require(\"fs\")\n\nrequire(\"dotenv\").config()\n\nconst octokit = new Octokit({\n  auth: \"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\",\n})\nconst main2=async(str)=>{\n\n}\nexport default async (req:NextApiRequest, res:NextApiResponse)=> {\n\n\n        const hash = req.body.hash;\n\n\n        try{\n            const filename=hash//assign as str\n            const {data}=await octokit.request('GET /repos/{owner}/{repo}/contents/{path}', {\n              owner: \"chandrashekarvt\",\n              repo: \"githubApiUsageToUploadDownload\",\n                path: filename\n              })\n              console.log(data.html_url)\n              res.status(200).json(data.html_url)\n            }\n             catch (err) {\n            console.error(err)\n            }\n          }\n"]},"metadata":{},"sourceType":"module"}