{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/components/ApproveForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport Campaign from '../ethereum/testingNode';\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\nimport { putResult } from '../utils';\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      malwareAddress: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault(); // const campaign = Campaign(this.props.address);\n      // this.setState({ loading: true, errorMessage: '' });\n\n      try {\n        // const accounts = await web3.eth.getAccounts();\n        // await campaign.methods.approve(this.state.malwareAddress,this.state.value).send({\n        //   from: accounts[0],\n        //   malwareAddress : this.state.malwareAddress,\n        //   value: this.state.value\n        // });\n        const res = await putResult(this.props.address.hash, _objectSpread(_objectSpread({}, this.props.address), {}, {\n          percent: this.state.value\n        }));\n        Router.replaceRoute(`/campaigns/test/${this.props.address.hash}`);\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        value: '',\n        malwareAddress: ''\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Percent Malware\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: this.state.value,\n          onChange: event => this.setState({\n            value: event.target.value\n          }),\n          label: \"percent\",\n          labelPosition: \"right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Malware Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: this.state.malwareAddress,\n          onChange: event => this.setState({\n            malwareAddress: event.target.value\n          }),\n          label: \"address\",\n          labelPosition: \"right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        loading: this.state.loading,\n        children: \"Approve  ss!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/components/ApproveForm.js"],"names":["React","Component","Form","Input","Message","Button","Campaign","web3","Router","putResult","ContributeForm","value","malwareAddress","errorMessage","loading","event","preventDefault","res","props","address","hash","percent","state","replaceRoute","err","setState","message","render","onSubmit","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport Campaign from '../ethereum/testingNode';\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\nimport { putResult } from '../utils';\n\nclass ContributeForm extends Component {\n  state = {\n    value: '',\n    malwareAddress: '',\n    errorMessage: '',\n    loading: false\n  };\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    // const campaign = Campaign(this.props.address);\n\n    // this.setState({ loading: true, errorMessage: '' });\n\n    try {\n      // const accounts = await web3.eth.getAccounts();\n      // await campaign.methods.approve(this.state.malwareAddress,this.state.value).send({\n      //   from: accounts[0],\n      //   malwareAddress : this.state.malwareAddress,\n      //   value: this.state.value\n      // });\n      const res = await putResult(this.props.address.hash, { ...this.props.address, percent: this.state.value });\n      Router.replaceRoute(`/campaigns/test/${this.props.address.hash}`);\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n\n    this.setState({ loading: false, value: '' ,malwareAddress:''});\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n\n        <Form.Field>\n          <label>Percent Malware</label>\n          <Input\n            value={this.state.value}\n            onChange={event => this.setState({ value: event.target.value })}\n            label=\"percent\"\n            labelPosition=\"right\"\n          />\n          <br/>\n          <br/>\n          <label>Malware Address</label>\n          <Input\n            value={this.state.malwareAddress}\n            onChange={event => this.setState({ malwareAddress: event.target.value })}\n            label=\"address\"\n            labelPosition=\"right\"\n          />\n\n        </Form.Field>\n\n        <Message error header=\"Oops!\" content={this.state.errorMessage} />\n        <Button primary loading={this.state.loading}>\n          Approve  ss!\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default ContributeForm;\n"]},"metadata":{},"sourceType":"module"}