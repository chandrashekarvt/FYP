{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/pages/campaigns/test/show.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Card, Grid, Button, Divider, Icon, Header, Segment } from 'semantic-ui-react';\nimport Layout from '../../../components/Layout';\nimport Campaign from '../../../ethereum/testingNode';\nimport factory from '../../../ethereum/factory';\nimport web3 from '../../../ethereum/web3';\nimport ApproveForm from '../../../components/ApproveForm';\nimport PercentGetForm from '../../../components/PercentGetForm';\nimport AnalyseForm from '../../../components/AnalyseForm';\nimport GetFileForm from '../../../components/GetFileFormMalware';\nimport DownloadForm from '../../../components/DownloadForm';\nimport ByteForm from '../../../components/ByteForm';\nimport MalwaresForm from '../../../components/MalwaresForm';\nimport { Link } from '../../../routes';\nimport { getResult } from '../../../utils';\n\nvar CampaignShow = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  var _super = _createSuper(CampaignShow);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    // renderCampaigns() {\n    //   const items = this.props.campaignsNew.map(({ hash: address }) => {\n    //     return {\n    //       header: address,\n    //       description: (\n    //         <Link route={`/campaigns/${address}`}>\n    //           <a>View Malware</a>\n    //         </Link>\n    //       ),\n    //       fluid: true\n    //     };\n    //   });\n    //   return <Card.Group items={items} />;\n    // }\n    value: function renderCards() {\n      var _this$props = this.props,\n          address = _this$props.address,\n          trustValue = _this$props.trustValue,\n          myAddress = _this$props.myAddress;\n      var items = [{\n        header: address,\n        meta: 'Address of Test Node',\n        description: '',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: trustValue,\n        meta: 'Trust Value',\n        description: 'Trust Value of Node which changes based on action'\n      }, {\n        header: myAddress,\n        meta: 'My address',\n        description: '',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }];\n      return /*#__PURE__*/_jsxDEV(Card.Group, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h3\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), \"Details\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: this.renderCards()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Segment.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Segment.Group, {\n              horizontal: true,\n              children: /*#__PURE__*/_jsxDEV(Segment, {\n                children: [/*#__PURE__*/_jsxDEV(Header, {\n                  as: \"h3\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"percent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 21\n                  }, this), \"Report\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                  children: /*#__PURE__*/_jsxDEV(ApproveForm, {\n                    address: this.props.obj\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Segment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                as: \"h3\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"file alternate outline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 25\n                }, this), \"Get File Url\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                children: /*#__PURE__*/_jsxDEV(GetFileForm, {\n                  address: this.props.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Segment.Group, {\n              horizontal: true,\n              children: [/*#__PURE__*/_jsxDEV(Segment, {\n                children: [/*#__PURE__*/_jsxDEV(Header, {\n                  as: \"h3\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"file alternate outline\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 33\n                  }, this), \"Analysing Files\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                  children: /*#__PURE__*/_jsxDEV(AnalyseForm, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Segment, {\n                children: [/*#__PURE__*/_jsxDEV(Header, {\n                  as: \"h3\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"download\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 25\n                  }, this), \"Download File\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                  children: /*#__PURE__*/_jsxDEV(DownloadForm, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var res, campaigns, contribution;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getResult(\"http://localhost:8000/malwaredetection/get/\".concat(props.query.address));\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return getResult('http://localhost:8000/malwaredetection/');\n\n              case 5:\n                campaigns = _context.sent;\n                contribution = res.contribution;\n                return _context.abrupt(\"return\", {\n                  obj: res,\n                  address: props.query.address,\n                  trustValue: contribution,\n                  myAddress: '0xefCFCc404B71eB723100D02f9c9dfC71C197e265',\n                  campaignsNew: campaigns.malwares\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["/Users/chandrashekarvt/Desktop/final-year-project/Malware-Detection-july-13/pages/campaigns/test/show.js"],"names":["React","Component","Card","Grid","Button","Divider","Icon","Header","Segment","Layout","Campaign","factory","web3","ApproveForm","PercentGetForm","AnalyseForm","GetFileForm","DownloadForm","ByteForm","MalwaresForm","Link","getResult","CampaignShow","props","address","trustValue","myAddress","items","header","meta","description","style","overflowWrap","renderCards","obj","query","res","campaigns","contribution","campaignsNew","malwares"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Grid, Button,Divider,Icon,Header,Segment } from 'semantic-ui-react';\nimport Layout from '../../../components/Layout';\nimport Campaign from '../../../ethereum/testingNode';\nimport factory from '../../../ethereum/factory';\n\nimport web3 from '../../../ethereum/web3';\n\nimport ApproveForm from '../../../components/ApproveForm';\nimport PercentGetForm from '../../../components/PercentGetForm';\nimport AnalyseForm from '../../../components/AnalyseForm';\nimport GetFileForm from '../../../components/GetFileFormMalware';\nimport DownloadForm from '../../../components/DownloadForm';\nimport  ByteForm from '../../../components/ByteForm';\nimport MalwaresForm from '../../../components/MalwaresForm';\n\n\nimport { Link } from '../../../routes';\nimport { getResult } from '../../../utils';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    // const campaign = Campaign(props.query.address);\n    // const campaigns = await factory.methods.getDeployedMalwares().call();\n\n    // const summary = await campaign.methods.trustValue().call();\n    // const myaddress = await campaign.methods.nodeAddress().call();\n    const res = await getResult(`http://localhost:8000/malwaredetection/get/${props.query.address}`);\n    let campaigns = await getResult('http://localhost:8000/malwaredetection/');\n\n    const { contribution } = res;\n    return {\n      obj: res,\n      address: props.query.address,\n      trustValue: contribution,\n      myAddress: '0xefCFCc404B71eB723100D02f9c9dfC71C197e265',\n      campaignsNew: campaigns.malwares\n\n    };\n  }\n\n\n  // renderCampaigns() {\n  //   const items = this.props.campaignsNew.map(({ hash: address }) => {\n  //     return {\n  //       header: address,\n  //       description: (\n  //         <Link route={`/campaigns/${address}`}>\n  //           <a>View Malware</a>\n  //         </Link>\n  //       ),\n  //       fluid: true\n  //     };\n  //   });\n\n  //   return <Card.Group items={items} />;\n  // }\n\n\n  renderCards() {\n    const {\n      address,\n      trustValue,\n      myAddress\n    } = this.props;\n\n    const items = [\n      {\n        header: address,\n        meta: 'Address of Test Node',\n        description:\n          '',\n        style: { overflowWrap: 'break-word' }\n      },\n      {\n        header: trustValue,\n        meta: 'Trust Value',\n        description:\n          'Trust Value of Node which changes based on action'\n      },\n      {\n        header: myAddress,\n        meta: 'My address',\n        description:\n          '',\n        style: { overflowWrap: 'break-word' }\n\n       }\n\n    ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n\n      <Header as='h3'>\n          <Icon name='user' />\n          Details\n      </Header>\n        <Grid>\n          <Grid.Row>\n            {this.renderCards()}\n          </Grid.Row>\n\n    <Segment.Group>\n\n        <Segment.Group horizontal>\n              {/* <Segment>\n\n          <Header as='h3'>\n              <Icon name=\"percent\"/>\n              Percentage Malware Reported\n          </Header>\n              <Grid.Row>\n                <PercentGetForm address={this.props.address} />\n              </Grid.Row>\n\n              </Segment>*/}\n\n              <Segment> \n\n            <Header as='h3'>\n                    <Icon name=\"percent\"/>\n                        Report\n            </Header>\n                    <Grid.Row>\n                  <ApproveForm address={this.props.obj} />\n                    </Grid.Row>\n\n\n            </Segment>\n            </Segment.Group>\n            <Segment>\n                    <Header as='h3'>\n                        <Icon name='file alternate outline' />\n                        Get File Url\n                    </Header>\n                                <Grid.Row>\n                                    <GetFileForm address={this.props.address}/>\n                                </Grid.Row>\n\n                    </Segment>\n\n\n               <Segment.Group horizontal>\n                    <Segment>\n                            <Header as='h3'>\n                                <Icon name='file alternate outline' />\n                                Analysing Files\n                            </Header>\n\n                                    <Grid.Row>\n                                        <AnalyseForm />\n                                    </Grid.Row>\n\n                                    </Segment>\n                                <Segment>\n\n                    <Header as='h3'>\n                        <Icon name='download' />\n                        Download File\n                    </Header>\n\n                            <Grid.Row>\n                                <DownloadForm />\n                            </Grid.Row>\n\n                            </Segment>\n                     </Segment.Group>\n      \n      </Segment.Group>\n\n\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}